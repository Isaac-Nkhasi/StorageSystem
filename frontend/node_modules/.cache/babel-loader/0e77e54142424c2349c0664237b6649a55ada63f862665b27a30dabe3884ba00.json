{"ast":null,"code":"// frontend/src/utils/exportUtils.js\n\n/**\r\n * Download blob as file\r\n */\nexport const downloadBlob = (blob, filename) => {\n  // Create a link element\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n\n  // Append to the document\n  document.body.appendChild(link);\n\n  // Trigger download\n  link.click();\n\n  // Clean up\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\n/**\r\n * Handle export response and trigger download\r\n */\nexport const handleExport = async (exportFunction, params = {}, filename = 'export') => {\n  try {\n    const response = await exportFunction(params);\n\n    // Get filename from content-disposition header or use default\n    const contentDisposition = response.headers['content-disposition'];\n    let exportFilename = filename;\n    if (contentDisposition) {\n      const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n      if (filenameMatch) {\n        exportFilename = filenameMatch[1];\n      }\n    }\n    downloadBlob(response.data, exportFilename);\n    return {\n      success: true,\n      message: 'Export completed successfully'\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Export error:', error);\n    return {\n      success: false,\n      message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Export failed. Please try again.'\n    };\n  }\n};\n\n/**\r\n * Generate export parameters based on user role\r\n */\nexport const getExportParams = user => {\n  const params = new URLSearchParams();\n  params.append('role', user.role);\n  params.append('userId', user.id);\n  if (user.faculty) {\n    params.append('faculty', user.faculty);\n  }\n  return params.toString();\n};","map":{"version":3,"names":["downloadBlob","blob","filename","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleExport","exportFunction","params","response","contentDisposition","headers","exportFilename","filenameMatch","match","data","success","message","error","_error$response","_error$response$data","console","getExportParams","user","URLSearchParams","append","role","id","faculty","toString"],"sources":["D:/isaac2/frontend/src/utils/exportUtils.js"],"sourcesContent":["// frontend/src/utils/exportUtils.js\r\n\r\n/**\r\n * Download blob as file\r\n */\r\nexport const downloadBlob = (blob, filename) => {\r\n  // Create a link element\r\n  const url = window.URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  \r\n  // Append to the document\r\n  document.body.appendChild(link);\r\n  \r\n  // Trigger download\r\n  link.click();\r\n  \r\n  // Clean up\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\n/**\r\n * Handle export response and trigger download\r\n */\r\nexport const handleExport = async (exportFunction, params = {}, filename = 'export') => {\r\n  try {\r\n    const response = await exportFunction(params);\r\n    \r\n    // Get filename from content-disposition header or use default\r\n    const contentDisposition = response.headers['content-disposition'];\r\n    let exportFilename = filename;\r\n    \r\n    if (contentDisposition) {\r\n      const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\r\n      if (filenameMatch) {\r\n        exportFilename = filenameMatch[1];\r\n      }\r\n    }\r\n    \r\n    downloadBlob(response.data, exportFilename);\r\n    return { success: true, message: 'Export completed successfully' };\r\n  } catch (error) {\r\n    console.error('Export error:', error);\r\n    return { \r\n      success: false, \r\n      message: error.response?.data?.error || 'Export failed. Please try again.' \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * Generate export parameters based on user role\r\n */\r\nexport const getExportParams = (user) => {\r\n  const params = new URLSearchParams();\r\n  \r\n  params.append('role', user.role);\r\n  params.append('userId', user.id);\r\n  \r\n  if (user.faculty) {\r\n    params.append('faculty', user.faculty);\r\n  }\r\n  \r\n  return params.toString();\r\n};"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC9C;EACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;EAC5C,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;EACfI,IAAI,CAACI,QAAQ,GAAGT,QAAQ;;EAExB;EACAM,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;;EAE/B;EACAA,IAAI,CAACO,KAAK,CAAC,CAAC;;EAEZ;EACAN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMc,YAAY,GAAG,MAAAA,CAAOC,cAAc,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEjB,QAAQ,GAAG,QAAQ,KAAK;EACtF,IAAI;IACF,MAAMkB,QAAQ,GAAG,MAAMF,cAAc,CAACC,MAAM,CAAC;;IAE7C;IACA,MAAME,kBAAkB,GAAGD,QAAQ,CAACE,OAAO,CAAC,qBAAqB,CAAC;IAClE,IAAIC,cAAc,GAAGrB,QAAQ;IAE7B,IAAImB,kBAAkB,EAAE;MACtB,MAAMG,aAAa,GAAGH,kBAAkB,CAACI,KAAK,CAAC,iBAAiB,CAAC;MACjE,IAAID,aAAa,EAAE;QACjBD,cAAc,GAAGC,aAAa,CAAC,CAAC,CAAC;MACnC;IACF;IAEAxB,YAAY,CAACoB,QAAQ,CAACM,IAAI,EAAEH,cAAc,CAAC;IAC3C,OAAO;MAAEI,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAgC,CAAC;EACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO;MACLF,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAAE,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI;IAC1C,CAAC;EACH;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,eAAe,GAAIC,IAAI,IAAK;EACvC,MAAMf,MAAM,GAAG,IAAIgB,eAAe,CAAC,CAAC;EAEpChB,MAAM,CAACiB,MAAM,CAAC,MAAM,EAAEF,IAAI,CAACG,IAAI,CAAC;EAChClB,MAAM,CAACiB,MAAM,CAAC,QAAQ,EAAEF,IAAI,CAACI,EAAE,CAAC;EAEhC,IAAIJ,IAAI,CAACK,OAAO,EAAE;IAChBpB,MAAM,CAACiB,MAAM,CAAC,SAAS,EAAEF,IAAI,CAACK,OAAO,CAAC;EACxC;EAEA,OAAOpB,MAAM,CAACqB,QAAQ,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}